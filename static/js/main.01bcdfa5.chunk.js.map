{"version":3,"sources":["ContactForm/ContactForm.js","ContactsList/ContactsList.js","Filter/Filter.js","App.js","index.js"],"names":["INIITAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","onCheckUnique","alert","resetForm","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","console","log","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01bcdfa5.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst INIITAL_STATE = {\r\n        name: '',\r\n        phone: '',\r\n    }\r\n\r\nclass ContactForm extends Component {\r\n    state = INIITAL_STATE\r\n\r\n    handleChangeForm = ({ target }) => {\r\n        const { name, value } = target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, phone } = this.state\r\n        const { onAdd } = this.props\r\n        \r\n        const isValidatedForm = this.validateForm()\r\n\r\n        if (!isValidatedForm) return\r\n        \r\n        onAdd({ id: uuid(), name, phone })\r\n        \r\n    }\r\n\r\n    validateForm = () => {\r\n        const { name, phone } = this.state\r\n        const { onCheckUnique } = this.props\r\n        if (!name || !phone) {\r\n            alert('Some filed is empty')\r\n            return false\r\n        }\r\n        return onCheckUnique(name)\r\n    }\r\n\r\n    resetForm = () => this.setState(INIITAL_STATE)\r\n\r\n    render() {\r\n        const { name, phone } = this.state\r\n        return (\r\n            <form onSubmit={this.handleFormSubmit}>\r\n                <input type='text' name='name' placeholder='Enter name' value={name} onChange ={this.handleChangeForm} />\r\n                <input type='tel' name='phone' placeholder='Enter phone number' value={phone} onChange ={this.handleChangeForm} />\r\n                <button type='submit'>Add Contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm","const ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    return (\r\n        <li key={id}>\r\n            {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\r\n            \r\n        </li>\r\n    )\r\n}\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <ul >\r\n            {contacts.map((contact) => (\r\n                <ContactListItem {...contact} onRemove={onRemove} />\r\n                \r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ContactsList","const Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <input type='text' name='filter' value={filter} onChange={({ target }) => onChange(target.value)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Filter","import { Component } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactsList from './ContactsList';\nimport Filter from './Filter';\nimport './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n   \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('обновилось поле contacts');\n      \n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n   }\n  }\n\n  handleAddContact = (newContact) => this.setState(({ contacts }) => ({\n    contacts: [...contacts, newContact],\n  }))\n\n  handleCheckUnique = (name) => {\n    const { contacts } = this.state\n    \n    const isExistContact = !!contacts.find((contact) => contact.name === name)\n    \n    isExistContact && alert('Contact is already exist')\n\n    return !isExistContact\n  }\n\n  handleRemoveContact = (id) => this.setState(({ contacts }) => ({ contacts: contacts.filter((contact) => contact.id !== id) }))\n\n  handleFilterChange = (filter) => this.setState({ filter })\n  \n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  }\n\n  render() {\n    const { filter } = this.state\n    const visibleContacts = this.getVisibleContacts()\n    return (\n      <>\n        <h2>Form Contact</h2>\n        <ContactForm onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique} />\n        <h2>Contacts List</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\n      </>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}